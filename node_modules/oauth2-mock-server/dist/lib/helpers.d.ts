import type { AddressInfo } from 'node:net';
import type { CodeChallenge, PKCEAlgorithm, TokenRequest } from './types';
export declare const defaultTokenTtl = 3600;
export declare function assertIsString(input: unknown, errorMessage: string): asserts input is string;
export declare function assertIsStringOrUndefined(input: unknown, errorMessage: string): asserts input is string | undefined;
export declare function assertIsAddressInfo(input: string | null | AddressInfo): asserts input is AddressInfo;
export declare function assertIsPlainObject(obj: unknown, errMessage: string): asserts obj is Record<string, unknown>;
export declare function pkceVerifierMatchesChallenge(verifier: string, challenge: CodeChallenge): Promise<boolean>;
export declare function assertIsValidTokenRequest(body: unknown): asserts body is TokenRequest;
export declare function shift(arr: (string | undefined)[]): string;
export declare const readJsonFromFile: (filepath: string) => Record<string, unknown>;
export declare const isValidPkceCodeVerifier: (verifier: string) => boolean;
export declare const createPKCEVerifier: () => string;
export declare const supportedPkceAlgorithms: readonly ["plain", "S256"];
export declare const createPKCECodeChallenge: (verifier?: string, algorithm?: PKCEAlgorithm) => Promise<string>;
